{"version":3,"sources":["AddEvent.js","UpdateEvent.js","EventList.js","ApiClient.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["AddEvent","props","state","id","name","location","precis","date","time","event","newState","target","value","this","setState","preventDefault","onSubmit","Form","e","submitHandler","Group","controlId","Label","Control","type","onChange","handleChange","Button","variant","React","Component","UpdateEvent","EventList","updateEventList","response","eventArray","data","events","grabList","client","getEvents","then","createList","eventList","Array","from","map","current","key","_id","onClick","deleteEvent","bind","returnID","array","newEvent","updateEvent","status","catch","error","console","alert","Table","striped","bordered","hover","createEvent","logout","url","ApiClient","tokenProvider","logoutHandler","username","password","log","axios","method","header","authorization","Promise","reject","resolve","Error","statusText","authenticatedCall","Login","disabled","login","loggedIn","token","App","undefined","window","localStorage","setItem","getItem","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.712c48b5.chunk.js","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass AddEvent extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: 0,\r\n            name: \"\",\r\n            location: \"\",\r\n            precis: \"\",\r\n            date: 0,\r\n            time: 0\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const newState = {};\r\n        newState[event.target.name] = event.target.value;\r\n        this.setState(newState)\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state.name, this.state.location, this.state.precis, this.state.date, this.state.time);\r\n        this.setState({\r\n            id: 0,\r\n            name: \"\",\r\n            location: \"\",\r\n            precis: \"\",\r\n            date: 0,\r\n            time: 0\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Form onSubmit={(e) => this.submitHandler(e)}>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control name=\"name\" type=\"text\" value={this.state.name} onChange={(e) => this.handleChange(e)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"location\">\r\n                        <Form.Label>Location</Form.Label>\r\n                        <Form.Control name=\"location\" type=\"text\" value={this.state.location} onChange={(e) => this.handleChange(e)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"precis\">\r\n                        <Form.Label>Precis</Form.Label>\r\n                        <Form.Control name=\"precis\" type=\"text\" value={this.state.precis} onChange={(e) => this.handleChange(e)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"date\">\r\n                        <Form.Label>Date</Form.Label>\r\n                        <Form.Control name=\"date\" type=\"text\" value={this.state.date} onChange={(e) => this.handleChange(e)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"time\">\r\n                        <Form.Label>Time</Form.Label>\r\n                        <Form.Control name=\"time\" type=\"text\" value={this.state.time} onChange={(e) => this.handleChange(e)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Add Event\r\n                </Button>\r\n                </Form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddEvent;","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass UpdateEvent extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: \"\",\r\n            name: \"\",\r\n            location: \"\",\r\n            precis: \"\",\r\n            date: 0,\r\n            time: 0\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const newState = {};\r\n        newState[event.target.name] = event.target.value;\r\n        this.setState(newState)\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state.id, this.state.name, this.state.location, this.state.precis, this.state.date, this.state.time);\r\n        this.setState({\r\n            id: \"\",\r\n            name: \"\",\r\n            location: \"\",\r\n            precis: \"\",\r\n            date: 0,\r\n            time: 0\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Form onSubmit={(e) => this.submitHandler(e)}>\r\n                    <Form.Group controlId=\"id\">\r\n                        <Form.Label>ID</Form.Label>\r\n                        <Form.Control name=\"id\" type=\"text\" value={this.state.id} onChange={(e) => this.handleChange(e)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control name=\"name\" type=\"text\" value={this.state.name} onChange={(e) => this.handleChange(e)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"location\">\r\n                        <Form.Label>Location</Form.Label>\r\n                        <Form.Control name=\"location\" type=\"text\" value={this.state.location} onChange={(e) => this.handleChange(e)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"precis\">\r\n                        <Form.Label>Precis</Form.Label>\r\n                        <Form.Control name=\"precis\" type=\"text\" value={this.state.precis} onChange={(e) => this.handleChange(e)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"date\">\r\n                        <Form.Label>Date</Form.Label>\r\n                        <Form.Control name=\"date\" type=\"text\" value={this.state.date} onChange={(e) => this.handleChange(e)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"time\">\r\n                        <Form.Label>Time</Form.Label>\r\n                        <Form.Control name=\"time\" type=\"text\" value={this.state.time} onChange={(e) => this.handleChange(e)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Update Event\r\n                </Button>\r\n                </Form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateEvent;","import React from 'react';\r\nimport AddEvent from './AddEvent'\r\nimport UpdateEvent from './UpdateEvent'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nclass EventList extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      events: [\r\n\r\n      ]\r\n    }\r\n    this.createList = this.createList.bind(this);\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.grabList()\r\n  }\r\n\r\n\r\n  updateEventList = (response) => {\r\n    const eventArray = response.data\r\n    this.setState(() => ({\r\n      events: eventArray\r\n    }));\r\n  }\r\n\r\n  grabList = () => {\r\n    this.props.client.getEvents()\r\n      .then((response) => {\r\n        this.updateEventList(response);\r\n      })\r\n  }\r\n\r\n  IDsearch(id) {\r\n    this.props.client.returnID(id)\r\n      .then((response) => {\r\n        const search = response.data\r\n        let array = [search]\r\n        this.setState(() => ({\r\n          events: array\r\n        }))\r\n      })\r\n  }\r\n\r\n\r\n  createEvent(name, location, precis, date, time) {\r\n    this.props.client.newEvent(name, location, precis, date, time)\r\n      .then((response) => {\r\n        this.grabList(response);\r\n      })\r\n  }\r\n\r\n  updateEvent(id, name, location, precis, date, time) {\r\n    this.props.client.updateEvent(id, name, location, precis, date, time)\r\n      .then((response) => {\r\n        this.grabList(response);\r\n      })\r\n      .then(this.status)\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.error(error);\r\n        alert(error)\r\n      })\r\n  }\r\n\r\n  deleteEvent(id) {\r\n    this.props.client.deleteEvent(id)\r\n      .then((response) => {\r\n        this.grabList(response);\r\n      })\r\n  }\r\n\r\n  createList = () => {\r\n    let type = typeof (response)\r\n    if (type !== \"array\") {\r\n      let eventList = this.state.events;\r\n      eventList = Array.from(eventList)\r\n      return eventList.map((current) => (\r\n        <tr key={current._id}>\r\n          <td>\r\n            {current.name}\r\n          </td>\r\n          <td>\r\n            {current.location}\r\n          </td>\r\n          <td>\r\n            {current.precis}\r\n          </td>\r\n          <td>\r\n            {current.date}\r\n          </td>\r\n          <td>\r\n            {current.time}\r\n          </td>\r\n          <td>\r\n          <button onClick={() => this.deleteEvent(current._id)}>Delete</button>\r\n          </td>\r\n        </tr>\r\n      ))\r\n    } else {\r\n      return this.events.map((current) => (\r\n        <tr key={current.id}>\r\n          \r\n          <td>\r\n            {current.name}\r\n          </td>\r\n          <td>\r\n            {current.location}\r\n          </td>\r\n          <td>\r\n            {current.precis}\r\n          </td>\r\n          <td>\r\n            {current.date}\r\n          </td>\r\n          <td>\r\n            {current.time}\r\n          </td>\r\n          <td>\r\n          <button onClick={() => this.deleteEvent(current._id)}>Delete</button>\r\n          </td>\r\n        </tr>\r\n      )\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <h1>The Event List</h1>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <td>Name</td>\r\n                <td>Location</td>\r\n                <td>Precis</td>\r\n                <td>Date</td>\r\n                <td>Time</td>\r\n                <td>Delete</td>\r\n              </tr>\r\n              </thead>\r\n            <tbody>\r\n              {this.createList()}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n<br></br>\r\n        <h3>Add Event to List</h3>\r\n        <AddEvent onSubmit={(id, name, location, precis, date, time) => this.createEvent(id, name, location, precis, date, time)} />\r\n        <br></br>\r\n        <h4>Edit Event Entry</h4>\r\n        <UpdateEvent onSubmit={(id, name, location, precis, date, time) => this.updateEvent(id, name, location, precis, date, time)} />\r\n        <br></br>\r\n        <Button onClick= {this.props.logout} >Logout</Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import axios from 'axios'\r\n\r\nconst url = 'https://mysterious-castle-32998.herokuapp.com/eventlist/'\r\nconst urlshort = 'https://mysterious-castle-32998.herokuapp.com/'\r\n\r\n//const url = 'http://localhost:3000/eventlist/'\r\n//const urlshort = 'http://localhost:3000/'\r\n\r\nexport class ApiClient {\r\n  constructor(tokenProvider, logoutHandler) {\r\n    this.tokenProvider = tokenProvider\r\n    this.logoutHandler = logoutHandler\r\n  }\r\n\r\n  async login(username, password) {\r\n    console.log(username, password)\r\n    return await axios({\r\n      method: 'post',\r\n      url: `${urlshort}auth`,\r\n      header: { authorization: this.tokenProvider() },\r\n      data: {\r\n        username,\r\n        password\r\n      }\r\n    });\r\n  }\r\n\r\n  authenticatedCall(method, url, data) {\r\n    return axios({\r\n      method, url, \r\n      header: { authorization: this.tokenProvider() },\r\n      data\r\n    })\r\n      .catch((error) => {\r\n        if (error.response.status === 403) {\r\n          this.logoutHandler();\r\n          return Promise.reject()\r\n        } else { throw error; }\r\n      })\r\n  }\r\n\r\n  status(response) {\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return Promise.resolve(response)\r\n    } else {\r\n      return Promise.reject(new Error(response.statusText))\r\n    }\r\n  }\r\n\r\n  getEvents() {\r\n    return this.authenticatedCall('get', url)\r\n  }\r\n\r\n  newEvent(name, location, precis, date, time) {\r\n    return this.authenticatedCall('post', `${url}create`,\r\n      {\r\n        name,\r\n        location,\r\n        precis,\r\n        date,\r\n        time\r\n      })\r\n  }\r\n\r\n  deleteEvent(id) {\r\n    return this.authenticatedCall('delete', `${url}${id}`)\r\n  }\r\n\r\n  updateEvent(id, name, location, precis, date, time) {\r\n    return this.authenticatedCall('put', `${url}${id}`, { name, location, precis, date, time })\r\n  }\r\n\r\n  returnID(id) {\r\n    return this.authenticatedCall('get', `${url}${id}`)\r\n  }\r\n\r\n}","import React from 'react';\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      disabled: false\r\n    }\r\n  }\r\n\r\n  submitHandler(e) {\r\n      e.preventDefault();\r\n      this.setState({ disabled: true })\r\n      this.props.client.login(e.target.username.value, e.target.password.value)\r\n      .then((response) => {\r\n        this.setState({ disabled: false });\r\n          this.props.loggedIn(response.data.token)\r\n      })\r\n      .catch(() => {\r\n          alert(\"an error occurred, please try again\");\r\n          this.setState({ disabled: false })\r\n      })\r\n  }\r\n\r\nrender() {\r\n    return (\r\n      <>\r\n        Login<br />\r\n        <form onSubmit={(e) => this.submitHandler(e)} >\r\n          Username<br />\r\n          <input type=\"text\" name=\"username\" disabled={this.state.disabled} /><br />\r\n      Password<br />\r\n          <input type=\"password\" name=\"password\" disabled={this.state.disabled} /><br /><br />\r\n          <button type=\"submit\" disabled={this.state.disabled}> Submit </button>\r\n        </form>\r\n      </>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Login;","import React from 'react';\nimport EventList from './EventList'\nimport { ApiClient } from './ApiClient'\nimport Login from './Login'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      token: window.localStorage.getItem(\"token\"),\n    }\n    this.client = new ApiClient(\n      () => this.state.token, () => this.logout() \n      )\n  }\n\n  login(token) {\n    window.localStorage.setItem(\"token\", token);\n    this.setState({ token })\n  }\n\n  logout = (token) => {\n    this.setState({ token: undefined })\n    window.localStorage.setItem(\"token\", token);\n  }\n\n render() {\n    if (this.state.token) {\n    return <EventList client={this.client} logout={this.logout} /> }\n    return <Login loggedIn={(token) => this.login(token)} client={this.client} ></Login>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}